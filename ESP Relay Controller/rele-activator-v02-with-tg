#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
#include <ArduinoJson.h>

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ WiFi
const char* ssid = "wifi ssd";
const char* password = "wifi pass";

// –ò—Å–ø–æ–ª—å–∑—É–µ–º GPIO0 (Pin 5)
const int relayPin = 0;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø—É–ª—å—Å–∞
int defaultPulseDurationMs = 5; // –î–µ—Ñ–æ–ª—Ç 5 –º—Å

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞
String telegramBotToken = ""; // –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–ø—É—Å—Ç–æ–π = –æ—Ç–∫–ª—é—á–µ–Ω)
String telegramChatID = "";   // ID —á–∞—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
WiFiClientSecure telegramClient;
UniversalTelegramBot* bot = nullptr;

// –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
unsigned long totalActivations = 0;
unsigned long lastActivationTime = 0;

// –°–æ–∑–¥–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 80
ESP8266WebServer server(80);

void setup() {
  Serial.begin(115200);
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º GPIO3 –∫–∞–∫ –≤—ã—Ö–æ–¥
  pinMode(relayPin, OUTPUT);
  digitalWrite(relayPin, LOW); // –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - —Ä–∞–∑–æ–º–∫–Ω—É—Ç–æ
  
  Serial.println("=== ESP-01 RELAY CONTROLLER ===");
  Serial.println("–î–µ—Ñ–æ–ª—Ç –∏–º–ø—É–ª—å—Å: " + String(defaultPulseDurationMs) + " –º—Å");
  Serial.println("GPIO0 (Pin 5) —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ª–µ");
  
  // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WiFi
  WiFi.begin(ssid, password);
  Serial.print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ '" + String(ssid) + "'");
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  
  Serial.println();
  Serial.print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ! IP: ");
  Serial.println(WiFi.localIP());
  
  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
  server.on("/", handleRoot);
  server.on("/enable", handleWebhook);          // Webhook —Å –¥–µ—Ñ–æ–ª—Ç 5–º—Å
  server.on("/activate", handleWebhookCustom);  // Webhook —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏
  server.on("/relay", handleRelayControl);      // –û—Å–Ω–æ–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
  server.on("/status", handleStatus);           // JSON —Å—Ç–∞—Ç—É—Å
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
  server.begin();
  Serial.println("üåê –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω");
  Serial.println("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: http://" + WiFi.localIP().toString() + "/");
  Serial.println("Webhook: http://" + WiFi.localIP().toString() + "/enable");
}

void loop() {
  server.handleClient();
}

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
void handleRoot() {
  String html = "<!DOCTYPE html>";
  html += "<html><head>";
  html += "<meta charset='UTF-8'>";
  html += "<meta name='viewport' content='width=device-width, initial-scale=1.0'>";
  html += "<title>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ª–µ</title>";
  html += "<style>";
  // –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω
  html += "* { margin: 0; padding: 0; box-sizing: border-box; }";
  html += "body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; min-height: 100vh; display: flex; align-items: center; justify-content: center; }";
  html += ".container { background: rgba(255,255,255,0.1); backdrop-filter: blur(15px); border-radius: 20px; padding: 40px; max-width: 500px; width: 90%; box-shadow: 0 8px 32px rgba(0,0,0,0.3); border: 1px solid rgba(255,255,255,0.2); }";
  html += ".header { text-align: center; margin-bottom: 40px; }";
  html += ".header h1 { font-size: 2.5em; margin-bottom: 10px; background: linear-gradient(45deg, #fff, #f0f0f0); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; }";
  html += ".header p { opacity: 0.9; font-size: 1.1em; }";
  html += ".connection-status { display: flex; align-items: center; justify-content: center; gap: 12px; margin: 25px 0; padding: 15px; background: rgba(255,255,255,0.1); border-radius: 10px; }";
  html += ".status-dot { width: 12px; height: 12px; border-radius: 50%; background: #4CAF50; box-shadow: 0 0 10px #4CAF50; animation: pulse 2s infinite; }";
  html += ".relay-control { text-align: center; margin: 40px 0; }";
  html += ".relay-button { background: linear-gradient(45deg, #4CAF50, #45a049); color: white; border: none; padding: 20px 50px; font-size: 1.3em; font-weight: bold; border-radius: 50px; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4); position: relative; overflow: hidden; }";
  html += ".relay-button:hover { transform: translateY(-3px); box-shadow: 0 8px 25px rgba(76, 175, 80, 0.6); }";
  html += ".relay-button:active { transform: translateY(-1px); }";
  html += ".relay-button:disabled { background: #666; cursor: not-allowed; transform: none; box-shadow: none; }";
  html += ".relay-button::before { content: ''; position: absolute; top: 50%; left: 50%; width: 0; height: 0; border-radius: 50%; background: rgba(255,255,255,0.3); transition: all 0.3s ease; transform: translate(-50%, -50%); }";
  html += ".relay-button:active::before { width: 300px; height: 300px; }";
  html += ".info-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin: 30px 0; }";
  html += ".info-card { background: rgba(255,255,255,0.1); padding: 20px; border-radius: 12px; text-align: center; transition: all 0.3s ease; }";
  html += ".info-card:hover { background: rgba(255,255,255,0.15); transform: translateY(-2px); }";
  html += ".info-value { font-size: 2em; font-weight: bold; color: #ffd700; margin-bottom: 5px; }";
  html += ".info-label { font-size: 0.9em; opacity: 0.8; }";
  html += ".system-info { background: rgba(255,255,255,0.05); padding: 20px; border-radius: 12px; margin-top: 20px; }";
  html += ".system-row { display: flex; justify-content: space-between; padding: 8px 0; border-bottom: 1px solid rgba(255,255,255,0.1); }";
  html += ".system-row:last-child { border-bottom: none; }";
  html += ".webhook-section { background: rgba(0,255,0,0.1); padding: 20px; border-radius: 12px; margin-top: 20px; border: 1px solid rgba(76, 175, 80, 0.3); }";
  html += ".webhook-url { font-family: monospace; background: rgba(0,0,0,0.2); padding: 8px 12px; border-radius: 6px; margin: 5px 0; font-size: 0.9em; word-break: break-all; }";
  html += "@keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: 0.6; } }";
  html += "@keyframes fadeIn { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }";
  html += ".container { animation: fadeIn 0.8s ease-out; }";
  html += "</style>";
  html += "</head><body>";
  
  html += "<div class='container'>";
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫
  html += "<div class='header'>";
  html += "<h1>‚ö°</h1>";
  html += "<p>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ª–µ ESP-01</p>";
  html += "</div>";
  
  // –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  html += "<div class='connection-status'>";
  html += "<div class='status-dot'></div>";
  html += "<div>";
  html += "<strong>–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ " + String(ssid) + "</strong><br>";
  html += "<small>IP: " + WiFi.localIP().toString() + " | –°–∏–≥–Ω–∞–ª: " + String(WiFi.RSSI()) + " dBm</small>";
  html += "</div>";
  html += "</div>";
  
  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ª–µ
  html += "<div class='relay-control'>";
  html += "<button id='relayBtn' class='relay-button' onclick='activateRelay()'>";
  html += "üîÑ –ê–ö–¢–ò–í–ò–†–û–í–ê–¢–¨ –†–ï–õ–ï";
  html += "</button>";
  html += "<div style='margin-top: 15px; font-size: 0.9em; opacity: 0.8;'>";
  html += "–ò–º–ø—É–ª—å—Å " + String(defaultPulseDurationMs) + " –º—Å –Ω–∞ GPIO0";
  html += "</div>";
  html += "</div>";
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
  html += "<div class='info-grid'>";
  html += "<div class='info-card'>";
  html += "<div class='info-value'>" + String(totalActivations) + "</div>";
  html += "<div class='info-label'>–ê–∫—Ç–∏–≤–∞—Ü–∏–π</div>";
  html += "</div>";
  html += "<div class='info-card'>";
  html += "<div class='info-value'>" + String((millis() - lastActivationTime)/1000) + "s</div>";
  html += "<div class='info-label'>–ù–∞–∑–∞–¥</div>";
  html += "</div>";
  html += "</div>";
  
  // –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  html += "<div class='system-info'>";
  html += "<h4 style='margin-bottom: 15px; color: #ffd700;'>üìã –°–∏—Å—Ç–µ–º–∞</h4>";
  html += "<div class='system-row'><span>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</span><span>" + String(millis()/1000) + " —Å–µ–∫</span></div>";
  html += "<div class='system-row'><span>–°–≤–æ–±–æ–¥–Ω–∞—è –ø–∞–º—è—Ç—å</span><span>" + String(ESP.getFreeHeap()) + " –±–∞–π—Ç</span></div>";
  html += "<div class='system-row'><span>GPIO0 —Å–æ—Å—Ç–æ—è–Ω–∏–µ</span><span>" + String(digitalRead(relayPin) ? "HIGH" : "LOW") + "</span></div>";
  html += "<div class='system-row'><span>CPU —á–∞—Å—Ç–æ—Ç–∞</span><span>" + String(ESP.getCpuFreqMHz()) + " MHz</span></div>";
  html += "</div>";
  
  // Webhook –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  html += "<div class='webhook-section'>";
  html += "<h4 style='margin-bottom: 15px; color: #4CAF50;'>üåê Webhook Endpoints</h4>";
  String baseUrl = "http://" + WiFi.localIP().toString();
  html += "<div style='font-size: 0.9em;'>";
  html += "<div style='margin-bottom: 10px;'><strong>–ë—ã—Å—Ç—Ä–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (5–º—Å):</strong></div>";
  html += "<div class='webhook-url'>" + baseUrl + "/enable</div>";
  html += "<div style='margin: 15px 0 10px;'><strong>–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–µ –≤—Ä–µ–º—è:</strong></div>";
  html += "<div class='webhook-url'>" + baseUrl + "/activate?ms=10</div>";
  html += "<div style='margin-top: 10px; font-size: 0.8em; opacity: 0.7;'>";
  html += "–ü–∞—Ä–∞–º–µ—Ç—Ä ms: –æ—Ç 1 –¥–æ 1000 –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥";
  html += "</div>";
  // Telegram –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  if (telegramBotToken.length() > 0) {
    html += "<div class='webhook-section'>";
    html += "<h4 style='margin-bottom: 15px; color: #00BFFF;'>ü§ñ Telegram Bot</h4>";
    html += "<div style='font-size: 0.9em;'>";
    html += "<div class='system-row'><span>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞</span><span style='color: #4CAF50;'>‚úÖ –ê–∫—Ç–∏–≤–µ–Ω</span></div>";
    html += "<div class='system-row'><span>Chat ID</span><span>" + telegramChatID + "</span></div>";
    html += "<div style='margin-top: 10px; font-size: 0.8em; opacity: 0.7;'>";
    html += "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–∏ —Ä–µ–ª–µ";
    html += "</div>";
    html += "</div>";
    html += "</div>";
  } else {
    html += "<div class='webhook-section' style='background: rgba(255,165,0,0.1); border-color: rgba(255,165,0,0.3);'>";
    html += "<h4 style='margin-bottom: 15px; color: #FFA500;'>ü§ñ Telegram Bot</h4>";
    html += "<div style='font-size: 0.9em;'>";
    html += "<div class='system-row'><span>–°—Ç–∞—Ç—É—Å</span><span style='color: #FFA500;'>‚ö†Ô∏è –û—Ç–∫–ª—é—á–µ–Ω</span></div>";
    html += "<div style='margin-top: 10px; font-size: 0.8em; opacity: 0.7;'>";
    html += "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π<br>";
    html += "<a href='/telegram' style='color: #00BFFF;'>–ù–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram –±–æ—Ç–∞</a>";
    html += "</div>";
    html += "</div>";
    html += "</div>";
  }
  
  html += "</div>";
  
  // JavaScript
  html += "<script>";
  html += "function activateRelay() {";
  html += "  const btn = document.getElementById('relayBtn');";
  html += "  const originalText = btn.innerHTML;";
  html += "  ";
  html += "  btn.disabled = true;";
  html += "  btn.innerHTML = '‚ö° –ê–∫—Ç–∏–≤–∞—Ü–∏—è...';";
  html += "  ";
  html += "  fetch('/relay')";
  html += "    .then(response => response.text())";
  html += "    .then(data => {";
  html += "      btn.innerHTML = '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ!';";
  html += "      setTimeout(() => {";
  html += "        btn.innerHTML = originalText;";
  html += "        btn.disabled = false;";
  html += "        location.reload();";
  html += "      }, 1500);";
  html += "    })";
  html += "    .catch(error => {";
  html += "      console.error('–û—à–∏–±–∫–∞:', error);";
  html += "      btn.innerHTML = '‚ùå –û—à–∏–±–∫–∞';";
  html += "      setTimeout(() => {";
  html += "        btn.innerHTML = originalText;";
  html += "        btn.disabled = false;";
  html += "      }, 1500);";
  html += "    });";
  html += "}";
  html += "</script>";
  
  html += "</body></html>";
  
  server.send(200, "text/html", html);
}

// –û—Å–Ω–æ–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ª–µ (—Ç–µ–ø–µ—Ä—å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
void handleRelayControl() {
  activateRelay(defaultPulseDurationMs, "Web Interface");
  server.send(200, "text/plain", "Relay activated: " + String(defaultPulseDurationMs) + "ms");
}

// Webhook —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º (5–º—Å)
void handleWebhook() {
  activateRelay(defaultPulseDurationMs, "Webhook /enable");
  server.send(200, "text/plain", "Relay pulse: " + String(defaultPulseDurationMs) + "ms");
}

// Webhook —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º –≤—Ä–µ–º–µ–Ω–µ–º
void handleWebhookCustom() {
  int pulseDuration = defaultPulseDurationMs;
  
  if (server.hasArg("ms")) {
    int customMs = server.arg("ms").toInt();
    if (customMs >= 1 && customMs <= 1000) {
      pulseDuration = customMs;
    }
  }
  
  activateRelay(pulseDuration, "Webhook /activate");
  server.send(200, "text/plain", "Relay activated: " + String(pulseDuration) + "ms");
}

// JSON —Å—Ç–∞—Ç—É—Å
void handleStatus() {
  String json = "{";
  json += "\"gpio3_state\":" + String(digitalRead(relayPin)) + ",";
  json += "\"total_activations\":" + String(totalActivations) + ",";
  json += "\"last_activation_ago\":" + String((millis() - lastActivationTime)/1000) + ",";
  json += "\"default_pulse_ms\":" + String(defaultPulseDurationMs) + ",";
  json += "\"wifi_connected\":" + String(WiFi.status() == WL_CONNECTED ? "true" : "false") + ",";
  json += "\"ip_address\":\"" + WiFi.localIP().toString() + "\",";
  json += "\"rssi\":" + String(WiFi.RSSI()) + ",";
  json += "\"uptime\":" + String(millis()/1000) + ",";
  json += "\"free_heap\":" + String(ESP.getFreeHeap());
  json += "}";
  
  server.send(200, "application/json", json);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞
void handleTelegramConfig() {
  if (server.method() == HTTP_POST) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
    if (server.hasArg("bot_token")) {
      telegramBotToken = server.arg("bot_token");
      if (server.hasArg("chat_id")) {
        telegramChatID = server.arg("chat_id");
      }
      
      // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
      if (bot != nullptr) {
        delete bot;
        bot = nullptr;
      }
      
      if (telegramBotToken.length() > 0) {
        bot = new UniversalTelegramBot(telegramBotToken, telegramClient);
        Serial.println("ü§ñ Telegram –±–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω");
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (telegramChatID.length() > 0) {
          String message = "‚úÖ ESP-01 Relay Controller –ø–æ–¥–∫–ª—é—á–µ–Ω!\n";
          message += "IP: " + WiFi.localIP().toString() + "\n";
          message += "–í—Ä–µ–º—è: " + String(millis()/1000) + "s";
          
          if (bot->sendMessage(telegramChatID, message, "")) {
            Serial.println("üì§ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
          }
        }
      }
      
      server.send(200, "text/plain", "OK");
      return;
    }
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  String html = "<!DOCTYPE html>";
  html += "<html><head>";
  html += "<meta charset='UTF-8'>";
  html += "<meta name='viewport' content='width=device-width, initial-scale=1.0'>";
  html += "<title>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram</title>";
  html += "<style>";
  html += "* { margin: 0; padding: 0; box-sizing: border-box; }";
  html += "body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; min-height: 100vh; padding: 20px; }";
  html += ".container { background: rgba(255,255,255,0.1); backdrop-filter: blur(15px); border-radius: 20px; padding: 40px; max-width: 600px; margin: 0 auto; box-shadow: 0 8px 32px rgba(0,0,0,0.3); border: 1px solid rgba(255,255,255,0.2); }";
  html += ".header { text-align: center; margin-bottom: 40px; }";
  html += ".header h1 { font-size: 2.5em; margin-bottom: 10px; }";
  html += ".form-group { margin-bottom: 25px; }";
  html += ".form-group label { display: block; margin-bottom: 8px; font-weight: bold; }";
  html += ".form-group input { width: 100%; padding: 12px; border: 2px solid rgba(255,255,255,0.3); background: rgba(255,255,255,0.1); color: white; border-radius: 8px; font-size: 14px; }";
  html += ".form-group input:focus { outline: none; border-color: #4CAF50; }";
  html += ".form-group input::placeholder { color: rgba(255,255,255,0.5); }";
  html += ".btn { background: linear-gradient(45deg, #4CAF50, #45a049); color: white; border: none; padding: 15px 30px; font-size: 1.1em; font-weight: bold; border-radius: 8px; cursor: pointer; width: 100%; margin: 10px 0; }";
  html += ".btn:hover { background: linear-gradient(45deg, #45a049, #4CAF50); }";
  html += ".btn-secondary { background: rgba(255,255,255,0.2); }";
  html += ".info-box { background: rgba(0,255,255,0.1); border: 1px solid rgba(0,255,255,0.3); padding: 20px; border-radius: 12px; margin: 20px 0; font-size: 0.9em; line-height: 1.5; }";
  html += ".info-box h4 { margin-bottom: 10px; color: #00BFFF; }";
  html += ".info-box ol { margin-left: 20px; }";
  html += ".info-box li { margin: 8px 0; }";
  html += ".back-link { display: inline-block; margin-top: 20px; color: #00BFFF; text-decoration: none; }";
  html += ".back-link:hover { text-decoration: underline; }";
  html += "</style>";
  html += "</head><body>";
  
  html += "<div class='container'>";
  html += "<div class='header'>";
  html += "<h1>ü§ñ</h1>";
  html += "<p>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞</p>";
  html += "</div>";
  
  html += "<div class='info-box'>";
  html += "<h4>–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:</h4>";
  html += "<ol>";
  html += "<li>–ù–∞–π–¥–∏—Ç–µ –≤ Telegram –±–æ—Ç–∞ <strong>@BotFather</strong></li>";
  html += "<li>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>/newbot</code></li>";
  html += "<li>–°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞</li>";
  html += "<li>–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123456789:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw)</li>";
  html += "<li>–ù–∞–π–¥–∏—Ç–µ —Å–≤–æ–π Chat ID —á–µ—Ä–µ–∑ <strong>@userinfobot</strong></li>";
  html += "</ol>";
  html += "</div>";
  
  html += "<form id='telegramForm'>";
  html += "<div class='form-group'>";
  html += "<label>üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞:</label>";
  html += "<input type='text' id='bot_token' name='bot_token' value='" + telegramBotToken + "' placeholder='123456789:AAHdqTcvCH1vGWJxfSeofSAs0K5PALDsaw'>";
  html += "</div>";
  
  html += "<div class='form-group'>";
  html += "<label>üí¨ Chat ID:</label>";
  html += "<input type='text' id='chat_id' name='chat_id' value='" + telegramChatID + "' placeholder='123456789'>";
  html += "</div>";
  
  html += "<button type='submit' class='btn'>üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</button>";
  html += "</form>";
  
  html += "<button class='btn btn-secondary' onclick='testBot()'>üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</button>";
  
  html += "<a href='/' class='back-link'>‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é</a>";
  html += "</div>";
  
  html += "<script>";
  html += "document.getElementById('telegramForm').onsubmit = function(e) {";
  html += "  e.preventDefault();";
  html += "  const formData = new FormData();";
  html += "  formData.append('bot_token', document.getElementById('bot_token').value);";
  html += "  formData.append('chat_id', document.getElementById('chat_id').value);";
  html += "  ";
  html += "  fetch('/telegram', { method: 'POST', body: formData })";
  html += "    .then(response => response.text())";
  html += "    .then(data => {";
  html += "      if (data === 'OK') {";
  html += "        alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');";
  html += "        setTimeout(() => window.location.href = '/', 1000);";
  html += "      } else {";
  html += "        alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');";
  html += "      }";
  html += "    });";
  html += "};";
  
  html += "function testBot() {";
  html += "  const token = document.getElementById('bot_token').value;";
  html += "  const chatId = document.getElementById('chat_id').value;";
  html += "  if (!token || !chatId) {";
  html += "    alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω –∏ Chat ID');";
  html += "    return;";
  html += "  }";
  html += "  ";
  html += "  const formData = new FormData();";
  html += "  formData.append('bot_token', token);";
  html += "  formData.append('chat_id', chatId);";
  html += "  ";
  html += "  fetch('/telegram', { method: 'POST', body: formData })";
  html += "    .then(() => {";
  html += "      alert('–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram.');";
  html += "    });";
  html += "}";
  html += "</script>";
  html += "</body></html>";
  
  server.send(200, "text/html", html);
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
void sendTelegramNotification(String message) {
  if (bot != nullptr && telegramChatID.length() > 0) {
    Serial.println("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram: " + message);
    
    if (bot->sendMessage(telegramChatID, message, "")) {
      Serial.println("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
    } else {
      Serial.println("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è");
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–ª–µ —Å –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é
void activateRelay(int durationMs, String source) {
  unsigned long startTime = millis();
  
  Serial.println("=== –ê–ö–¢–ò–í–ê–¶–ò–Ø –†–ï–õ–ï ===");
  Serial.println("–ò—Å—Ç–æ—á–Ω–∏–∫: " + source);
  Serial.println("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: " + String(durationMs) + " –º—Å");
  Serial.println("–í—Ä–µ–º—è: " + String(startTime));
  
  // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Ä–µ–ª–µ
  digitalWrite(relayPin, HIGH);
  delay(durationMs);
  digitalWrite(relayPin, LOW);
  
  unsigned long totalTime = millis() - startTime;
  
  Serial.println("GPIO0: HIGH (" + String(durationMs) + "–º—Å) -> LOW");
  Serial.println("–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞: " + String(totalTime) + " –º—Å");
  Serial.println("==================");
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  totalActivations++;
  lastActivationTime = millis();
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
  if (bot != nullptr && telegramChatID.length() > 0) {
    String message = "‚ö° –†–µ–ª–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ!\n";
    message += "üîπ –ò—Å—Ç–æ—á–Ω–∏–∫: " + source + "\n";
    message += "‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: " + String(durationMs) + " –º—Å\n";
    message += "üìä –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π: " + String(totalActivations) + "\n";
    message += "üåê IP: " + WiFi.localIP().toString();
    
    sendTelegramNotification(message);
  }
}